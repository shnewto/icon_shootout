# The Computer Language Benchmarks Game
# http://shootout.alioth.debian.org/
#
# Translated from Python code written by
# Antoine Pitrou, Dominique Wahli and
# Daniel Nanz

link "memlog"

record nodes(a, b, c)
procedure make_tree(i, d)
   local i2
   if d > 0 then {
      i2 := i + i
      d -:= 1
      return nodes(i, make_tree(i2 - 1, d), make_tree(i2, d))
      }
   return nodes(i, &null, &null)
end

procedure check_tree(nodelst)
   local i, l, r
   i := nodelst[1]
   l := nodelst[2]
   r := nodelst[3]
   if /l then 
      return i
   else
      return i + check_tree(l) - check_tree(r)
end

procedure make_check(i, d)
   return (check_tree(make_tree(i, d)))
end

record ca(a,b)
record cb(a,b)
procedure get_argchunks(i, d)
   local k, chunksize, chunk

   chunksize:= 5000
   chunk := []
   every k := 1 to i do { 
      put(chunk, cb(ca(k, d), ca(-k, d)))
      if *chunk = chunksize then {
         suspend chunk
         chunk := []
         }
      }
   if *chunk > 0 then
      suspend chunk
end

procedure build_trees(d)
   local i, cs, argchunk
   i := 2 ^ (mmd - d)
   cs := 0
   every argchunk := !get_argchunks(i,d) do {
         cs +:= make_check(argchunk[1,1], argchunk[1,2])
         cs +:= make_check(argchunk[2,1], argchunk[2,2])
      }
   return (i*2 || "\t trees of depth " || d || "\t check: " || cs )
end

global min_depth, max_depth, stretch_depth, mmd, output
record SeqPool(imap)

procedure run_binarytrees(argv)
   local i, d, wL, rL, L2, pool, long_lived_tree
   wL := []
   rL := [] 
   min_depth := 4
   max_depth := argv[1]
   stretch_depth := max_depth + 1
   mmd := max_depth + min_depth

   write(output, "stretch tree of depth ", stretch_depth,
         "\t check: ", make_check(0, stretch_depth))
   
   every d := min_depth to stretch_depth by 2 do
      put(wL, d)
   
   L2 := list(*wL)

   every i := 1 to *L2 do {
      L2[i] := build_trees(wL[i])
      }

   every write(output, !L2)
   long_lived_tree := make_tree(0, max_depth)
   
   write(output, "long lived tree of depth ", max_depth,
         "\t check: ", check_tree(long_lived_tree))
end

#$ifdef MAIN
procedure main(argv)
   output := &output
   run_binarytrees(argv)
end
#$endif
